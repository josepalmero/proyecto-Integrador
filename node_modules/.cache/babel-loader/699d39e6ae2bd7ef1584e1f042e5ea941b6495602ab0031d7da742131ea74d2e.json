{"ast":null,"code":"var _jsxFileName = \"/Users/josepalmero/Documents/UdSA/Programacion3/proyecto-Integrador/src/pages/FavoritosPage.js\";\nimport React, { Component } from 'react';\nimport HomeMovies from \"../components/HomeMovies/HomeMovies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FavoritosPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isLoading: true\n    };\n  }\n  componentDidMount() {\n    const storage = localStorage.getItem(\"favoritos\");\n    if (storage !== null) {\n      const parsedStorage = JSON.parse(storage);\n      if (parsedStorage.length > 0) {\n        // Hacer fetch de todas las películas favoritas\n        Promise.all(parsedStorage.map(id => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=2e1ba77b764a76e2e48e86179135ae4d`).then(response => response.json()))).then(data => {\n          // Actualizar el estado con las películas favoritas\n          this.setState({\n            movies: data,\n            isLoading: false // Aquí actualizamos a false una vez que los datos están listos\n          });\n        });\n      } else {\n        // Si no hay películas favoritas\n        this.setState({\n          isLoading: false\n        });\n      }\n    } else {\n      // Si no hay favoritos almacenados en localStorage\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loader\",\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this) : this.state.movies.length > 0 ? /*#__PURE__*/_jsxDEV(HomeMovies, {\n        movies: this.state.movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tienes pel\\xEDculas en favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default FavoritosPage;","map":{"version":3,"names":["React","Component","HomeMovies","jsxDEV","_jsxDEV","FavoritosPage","constructor","props","state","movies","isLoading","componentDidMount","storage","localStorage","getItem","parsedStorage","JSON","parse","length","Promise","all","map","id","fetch","then","response","json","data","setState","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/josepalmero/Documents/UdSA/Programacion3/proyecto-Integrador/src/pages/FavoritosPage.js"],"sourcesContent":["import React, { Component } from 'react';\nimport HomeMovies from \"../components/HomeMovies/HomeMovies\";\n\nclass FavoritosPage extends Component {\n   constructor(props) {\n       super(props);\n       this.state = {\n           movies: [],\n           isLoading: true\n       };\n   }\n\n   componentDidMount() {\n       const storage = localStorage.getItem(\"favoritos\");\n\n       if (storage !== null) {\n           const parsedStorage = JSON.parse(storage);\n\n           if (parsedStorage.length > 0) {\n               // Hacer fetch de todas las películas favoritas\n               Promise.all(\n                   parsedStorage.map((id) =>\n                       fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=2e1ba77b764a76e2e48e86179135ae4d`)\n                           .then((response) => response.json())\n                   )\n               ).then((data) => {\n                   // Actualizar el estado con las películas favoritas\n                   this.setState({\n                       movies: data,\n                       isLoading: false // Aquí actualizamos a false una vez que los datos están listos\n                   });\n               });\n           } else {\n               // Si no hay películas favoritas\n               this.setState({ isLoading: false });\n           }\n       } else {\n           // Si no hay favoritos almacenados en localStorage\n           this.setState({ isLoading: false });\n       }\n   }\n\n   render() {\n       return (\n           <div>\n               {this.state.isLoading ? (\n                   <p className=\"loader\">Cargando...</p>\n               ) : this.state.movies.length > 0 ? (\n                   <HomeMovies movies={this.state.movies} />\n               ) : (\n                   <p>No tienes películas en favoritos</p>\n               )}\n           </div>\n       );\n   }\n}\n\nexport default FavoritosPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,UAAU,MAAM,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,aAAa,SAASJ,SAAS,CAAC;EACnCK,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE;IACf,CAAC;EACL;EAEAC,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAEjD,IAAIF,OAAO,KAAK,IAAI,EAAE;MAClB,MAAMG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACL,OAAO,CAAC;MAEzC,IAAIG,aAAa,CAACG,MAAM,GAAG,CAAC,EAAE;QAC1B;QACAC,OAAO,CAACC,GAAG,CACPL,aAAa,CAACM,GAAG,CAAEC,EAAE,IACjBC,KAAK,CAAC,sCAAsCD,EAAE,2CAA2C,CAAC,CACrFE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3C,CACJ,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK;UACb;UACA,IAAI,CAACC,QAAQ,CAAC;YACVnB,MAAM,EAAEkB,IAAI;YACZjB,SAAS,EAAE,KAAK,CAAC;UACrB,CAAC,CAAC;QACN,CAAC,CAAC;MACN,CAAC,MAAM;QACH;QACA,IAAI,CAACkB,QAAQ,CAAC;UAAElB,SAAS,EAAE;QAAM,CAAC,CAAC;MACvC;IACJ,CAAC,MAAM;MACH;MACA,IAAI,CAACkB,QAAQ,CAAC;QAAElB,SAAS,EAAE;MAAM,CAAC,CAAC;IACvC;EACJ;EAEAmB,MAAMA,CAAA,EAAG;IACL,oBACIzB,OAAA;MAAA0B,QAAA,EACK,IAAI,CAACtB,KAAK,CAACE,SAAS,gBACjBN,OAAA;QAAG2B,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACrC,IAAI,CAAC3B,KAAK,CAACC,MAAM,CAACS,MAAM,GAAG,CAAC,gBAC5Bd,OAAA,CAACF,UAAU;QAACO,MAAM,EAAE,IAAI,CAACD,KAAK,CAACC;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAEzC/B,OAAA;QAAA0B,QAAA,EAAG;MAAgC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACzC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAEd;AACH;AAEA,eAAe9B,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}